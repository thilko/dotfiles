# prompt
autoload -Uz vcs_info
autoload -U colors && colors
autoload -U promptinit
promptinit

zstyle ':vcs_info:*' enable git svn

# GIT
zstyle ':vcs_info:git*:*' get-revision true
zstyle ':vcs_info:git*:*' check-for-changes true
zstyle ':vcs_info:git*:*' unstagedstr "%{$fg[red]%}✘%{$reset_color%}"
zstyle ':vcs_info:git*' formats "%b%u"
zstyle ':vcs_info:git*' actionformats "%b%u"
zstyle ':vcs_info:git*+set-message:*' hooks git-st git-stash git-status


# Show remote ref name and number of commits ahead-of or behind
# See http://eseth.org/2010/git-in-zsh
function +vi-git-st() {
    local ahead behind remote
    local -a gitstatus

    # Are we on a remote-tracking branch?
    remote=${$(git rev-parse --verify ${hook_com[branch]}@{upstream} \
        --symbolic-full-name 2>/dev/null)/refs\/remotes\/}

    if [[ -n ${remote} ]] ; then
        # for git prior to 1.7
        # ahead=$(git rev-list origin/${hook_com[branch]}..HEAD | wc -l)
        ahead=$(git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null | wc -l | sed 's/ //g')
        (( $ahead )) && gitstatus+=( "%{$fg[green]%}+${ahead}%{$reset_color%}" )

        # for git prior to 1.7
        # behind=$(git rev-list HEAD..origin/${hook_com[branch]} | wc -l)
        behind=$(git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null | wc -l | sed 's/ //g')
        (( $behind )) && gitstatus+=( "%{$fg[red]%}-${behind}%{$reset_color%}" )

        (( !$ahead && !$behind )) && gitstatus+=( "%{$fg[green]%}◷%{$reset_color%}" )

        hook_com[misc]+=",${(j:/:)gitstatus}"

    fi
}

# Show count of stashed changes
# See http://eseth.org/2010/git-in-zsh
function +vi-git-stash() {
    local -a stashes

    if [[ -s ${hook_com[base]}/.git/refs/stash ]] ; then
        stashes=$(git stash list 2>/dev/null | wc -l | sed 's/ //g')
        hook_com[misc]+=",${stashes} ✄ "
    fi
}

function +vi-git-status() {
  if [ -f ".git/BISECT_LOG" ] ; then
    hook_com[misc]+=",BISECT"
  elif [ -f ".git/MERGE_HEAD" ] ; then
    hook_com[misc]+=",MERGE"
  else
    for dir in rebase rebase-apply rebase-merge ; do
      if [ -d ".git/$dir" ] ; then
        hook_com[misc]+=",REBASE"
        break
      fi
    done
  fi
}

function precmd() {
  vcs_info
}

vcs_bracket() {
  # Only if in versioned dir
  if [[ ${vcs_info_msg_0_} != "" ]] ; then
    echo "[${vcs_info_msg_0_}]"
  fi
}

PROMPT='%{$fg[cyan]%}%n%{$fg[green]%}:%(4~|...|)%2~%{$reset_color%}$(vcs_bracket)%(!.#.)%{$reset_color%}> '
