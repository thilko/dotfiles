{"mode":"editor","version":1,"windowDimensions":{"x":128,"y":22,"width":1024,"height":774,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"paths":["/Users/thilko/Documents/projects/bacheca"],"buffers":[{"text":"var express = require('express')\n  , routes = require('./routes')\n  , http = require('http')\n  , https = require('https')\n  , path = require('path')\n  , sass = require('node-sass');\n\nvar app = express();\n\napp.use(sass.middleware({\n      src: __dirname\n    , dest: __dirname + '/public/app'\n    , debug: true\n    , outputStyle: 'compressed'\n    , prefix:  '/prefix'\n  })\n);\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.json());\n  app.use(express.urlencoded());\n  app.use(app.router);\n  app.use('/', express.static(path.join(__dirname, 'public/app')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\napp.post(\"/bla\", function(req, res){\n  console.log(\"delete called\" + req.body.link);\n  https.globalAgent.options.secureProtocol = 'SSLv3_client_method';\n\n    var options = {\n      host: 'api.pinboard.in',\n      port: 443,\n      path: '/v1/posts/delete?format=json&url=' + req.body.link + '&auth_token=' + req.body.api_key\n    };\n\n    console.log(options);\n    var linkData =\"\";\n    https.get(options, function(data) {\n      data.setEncoding(\"utf8\");\n      data.on(\"data\", function(links){\n        console.log(links);\n      });\n\n      data.on(\"end\", function(e) {\n        console.log(e);\n      });\n    });\n});\n\napp.post(\"/link\", function(req, res){\n  console.log(req.body.link);\n  if(req.body.link.indexOf(\"https\") === 0){\n    https.get(req.body.link,function(resp){\n      console.log(req.body.link + \" success \" + resp.statusCode)\n      res.send({\"linkStatus\" : resp.statusCode});\n      resp.setEncoding('utf8');\n      resp.on(\"data\", function(xxx){\n        if(resp.statusCode == 500){\n          console.log(\"xxx\", xxx);\n        }\n      });\n    }).on(\"error\", function(e){\n      console.log(req.body.link + \"error\")\n      res.send(\"error\");\n    });\n  }else{\n    http.get(req.body.link, function(resp){\n      console.log(req.body.link + \"success \" + resp.statusCode)\n      res.send({\"linkStatus\":resp.statusCode});\n      resp.setEncoding('utf8');\n      resp.on(\"data\", function(xxx){\n        if(resp.statusCode == 500){\n          console.log(\"xxx\", xxx);\n        }\n      });\n    }).on(\"error\", function(e){\n      console.log(req.body.link + \"error\")\n      res.send(\"error\");\n    });\n  }\n});\n\napp.get('/link/:api_key', function(req, res){\n  https.globalAgent.options.secureProtocol = 'SSLv3_client_method';\n\n    var options = {\n      host: 'api.pinboard.in',\n      port: 443,\n      path: '/v1/posts/all?format=json&auth_token=' + req.params.api_key\n    };\n\n    console.log(options);\n    var linkData =\"\";\n    https.get(options, function(data) {\n      data.setEncoding(\"utf8\");\n      data.on(\"data\", function(links){\n        linkData = linkData + links;\n      });\n\n      data.on(\"end\", function(e) {\n        res.send(linkData);\n      });\n    });\n});\n\nhttp.createServer(app ).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n","markers":{"markers":{"1":{"id":1,"range":[[110,9],[110,9]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":16,"goalBufferRange":null},"deserializer":"Marker"},"2":{"id":2,"range":[[95,14],[95,28]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":28,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/thilko/Documents/projects/bacheca/app.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"95b9555ef2d1e84693b92f240faa46326a2f4b35","deserializer":"TextBuffer"},{"text":"'use strict';\n\nangular.module('bachecaApp')\n  .controller('MainCtrl', function ($scope, $http) {\n    $scope.fetchRandomLink = function(){\n        $http.get('/link/' + $scope.api_key).success(function(data){\n          $scope.data = data;\n          $scope.currentIndex = 0;\n          $scope.currentLink = data[$scope.currentIndex];\n        });\n    }\n\n    $scope.nextLink = function(){\n      $scope.currentIndex = $scope.currentIndex + 1;\n      $scope.currentLink = $scope.data[$scope.currentIndex];\n      $scope.checkBookmark($scope.currentIndex)\n    }\n\n    $scope.checkBookmark = function(index){\n      $http.post(\"/link\", {\"link\": $scope.currentLink.href, \"api_key\":$scope.api_key}).success(function(data, status, headers, config){\n        console.log(\"success link\" + $scope.currentLink.href)\n        $scope.currentLink.status = data.linkStatus;\n        if($scope.currentLink.status == 200){\n          $scope.currentLink.statusColor = \"success\";\n        }\n        if($scope.currentLink.status == 500){\n          $scope.currentLink.statusColor = \"danger\";\n        }\n        if($scope.currentLink.status == 301){\n          $scope.currentLink.statusColor = \"warning\";\n        }\n      }).error(function(data, status, headers, config){\n        $scope.currentLink.status = data.linkStatus;\n        console.log(\"error link\" + $scope.currentLink.href)\n      });\n    $scope.deleteLink = function() {\n      $http.post(\"/bla\", {\"link\": $scope.currentLink.href, \"api_key\": $scope.api_key}).success(function(data, status, headers, config){\n        console.log(\"link deleted\");\n      });\n    }\n\n    }\n  });\n","markers":{"markers":{"1":{"id":1,"range":[[34,0],[34,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":43,"goalBufferRange":null},"deserializer":"Marker"},"2":{"id":2,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[24,0],[24,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"4":{"id":4,"range":[[5,36],[5,43]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":4,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/thilko/Documents/projects/bacheca/public/app/scripts/controllers/main.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"6bff69ec5dc3b369ebdf68fa4a784d22bd18d33b","deserializer":"TextBuffer"},{"text":"'use strict';\n\nvar request = require('request');\n\nmodule.exports = function (grunt) {\n  // show elapsed time at the end\n  require('time-grunt')(grunt);\n  // load all grunt tasks\n  require('load-grunt-tasks')(grunt);\n\n  var reloadPort = 35729, files;\n\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n    develop: {\n      server: {\n        file: 'app.js'\n      }\n    },\n    watch: {\n      options: {\n        nospawn: true,\n        livereload: reloadPort\n      },\n      server: {\n        files: [\n          'app.js',\n          'routes/*.js'\n        ],\n        tasks: ['develop', 'delayed-livereload']\n      },\n      js: {\n        files: ['public/js/*.js'],\n        options: {\n          livereload: reloadPort\n        }\n      },\n      css: {\n        files: ['public/css/*.css'],\n        options: {\n          livereload: reloadPort\n        }\n      },\n      jade: {\n        files: ['views/*.jade'],\n        options: {\n          livereload: reloadPort\n        }\n      }\n    }\n  });\n\n  grunt.config.requires('watch.server.files');\n  files = grunt.config('watch.server.files');\n  files = grunt.file.expand(files);\n\n  grunt.registerTask('delayed-livereload', 'Live reload after the node server has restarted.', function () {\n    var done = this.async();\n    setTimeout(function () {\n      request.get('http://localhost:' + reloadPort + '/changed?files=' + files.join(','),  function (err, res) {\n          var reloaded = !err && res.statusCode === 200;\n          if (reloaded) {\n            grunt.log.ok('Delayed live reload successful.');\n          } else {\n            grunt.log.error('Unable to make a delayed live reload.');\n          }\n          done(reloaded);\n        });\n    }, 500);\n  });\n\n  grunt.registerTask('default', ['develop', 'watch']);\n};\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":32},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/thilko/Documents/projects/bacheca/Gruntfile.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f8bf2a69a587132a69697d00aeda3c987fd2e26e","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":138,"tokenizedBuffer":{"bufferPath":"/Users/thilko/Documents/projects/bacheca/public/app/scripts/controllers/main.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":28,"softTabs":true,"displayBuffer":{"id":29,"softWrapped":false,"editorWidthInChars":null,"scrollTop":1644,"scrollLeft":2,"tokenizedBuffer":{"bufferPath":"/Users/thilko/Documents/projects/bacheca/app.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":32,"softTabs":true,"displayBuffer":{"id":33,"softWrapped":false,"editorWidthInChars":null,"scrollTop":806,"scrollLeft":2,"tokenizedBuffer":{"bufferPath":"/Users/thilko/Documents/projects/bacheca/Gruntfile.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemUri":"/Users/thilko/Documents/projects/bacheca/app.js","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"packageStates":{"fuzzy-finder":{"/Users/thilko/Documents/projects/bacheca/public/app/scripts/controllers/main.js":1420310677932,"/Users/thilko/Documents/projects/bacheca/app.js":1420312605032,"/Users/thilko/Documents/projects/bacheca/Gruntfile.js":1420312238930},"keybinding-resolver":{},"metrics":{"sessionLength":2691789},"tree-view":{"directoryExpansionStates":{"views":{}},"selectedPath":"/Users/thilko/Documents/projects/bacheca/app.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["api_key"],"replaceHistory":[],"pathsHistory":[]}}}