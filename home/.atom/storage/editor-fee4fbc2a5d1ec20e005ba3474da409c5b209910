{"mode":"editor","version":1,"windowDimensions":{"x":196,"y":22,"width":1024,"height":774,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/thilko/Documents/projects/elasticsearch_ws/work/elasticsearch-1.3.2","buffers":[{"text":"##################### Elasticsearch Configuration Example #####################\n\n# This file contains an overview of various configuration settings,\n# targeted at operations staff. Application developers should\n# consult the guide at <http://elasticsearch.org/guide>.\n#\n# The installation procedure is covered at\n# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/setup.html>.\n#\n# Elasticsearch comes with reasonable defaults for most settings,\n# so you can try it out without bothering with configuration.\n#\n# Most of the time, these defaults are just fine for running a production\n# cluster. If you're fine-tuning your cluster, or wondering about the\n# effect of certain configuration option, please _do ask_ on the\n# mailing list or IRC channel [http://elasticsearch.org/community].\n\n# Any element in the configuration can be replaced with environment variables\n# by placing them in ${...} notation. For example:\n#\n#node.rack: ${RACK_ENV_VAR}\n\n# For information on supported formats and syntax for the config file, see\n# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/setup-configuration.html>\n\n\n################################### Cluster ###################################\n\n# Cluster name identifies your cluster for auto-discovery. If you're running\n# multiple clusters on the same network, make sure you're using unique names.\n#\ncluster.name: workshop\n\n\n#################################### Node #####################################\n\n# Node names are generated dynamically on startup, so you're relieved\n# from configuring them manually. You can tie this node to a specific name:\n#\n#node.name: \"Franz Kafka\"\n\n# Every node can be configured to allow or deny being eligible as the master,\n# and to allow or deny to store the data.\n#\n# Allow this node to be eligible as a master node (enabled by default):\n#\n#node.master: true\n#\n# Allow this node to store data (enabled by default):\n#\n#node.data: true\n\n# You can exploit these settings to design advanced cluster topologies.\n#\n# 1. You want this node to never become a master node, only to hold data.\n#    This will be the \"workhorse\" of your cluster.\n#\n#node.master: false\n#node.data: true\n#\n# 2. You want this node to only serve as a master: to not store any data and\n#    to have free resources. This will be the \"coordinator\" of your cluster.\n#\n#node.master: true\n#node.data: false\n#\n# 3. You want this node to be neither master nor data node, but\n#    to act as a \"search load balancer\" (fetching data from nodes,\n#    aggregating results, etc.)\n#\n#node.master: false\n#node.data: false\n\n# Use the Cluster Health API [http://localhost:9200/_cluster/health], the\n# Node Info API [http://localhost:9200/_nodes] or GUI tools\n# such as <http://www.elasticsearch.org/overview/marvel/>,\n# <http://github.com/karmi/elasticsearch-paramedic>,\n# <http://github.com/lukas-vlcek/bigdesk> and\n# <http://mobz.github.com/elasticsearch-head> to inspect the cluster state.\n\n# A node can have generic attributes associated with it, which can later be used\n# for customized shard allocation filtering, or allocation awareness. An attribute\n# is a simple key value pair, similar to node.key: value, here is an example:\n#\n#node.rack: rack314\n\n# By default, multiple nodes are allowed to start from the same installation location\n# to disable it, set the following:\n#node.max_local_storage_nodes: 1\n\n\n#################################### Index ####################################\n\n# You can set a number of options (such as shard/replica options, mapping\n# or analyzer definitions, translog settings, ...) for indices globally,\n# in this file.\n#\n# Note, that it makes more sense to configure index settings specifically for\n# a certain index, either when creating it or by using the index templates API.\n#\n# See <http://elasticsearch.org/guide/en/elasticsearch/reference/current/index-modules.html> and\n# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/indices-create-index.html>\n# for more information.\n\n# Set the number of shards (splits) of an index (5 by default):\n#\n#index.number_of_shards: 5\n\n# Set the number of replicas (additional copies) of an index (1 by default):\n#\n#index.number_of_replicas: 1\n\n# Note, that for development on a local machine, with small indices, it usually\n# makes sense to \"disable\" the distributed features:\n#\n#index.number_of_shards: 1\n#index.number_of_replicas: 0\n\n# These settings directly affect the performance of index and search operations\n# in your cluster. Assuming you have enough machines to hold shards and\n# replicas, the rule of thumb is:\n#\n# 1. Having more *shards* enhances the _indexing_ performance and allows to\n#    _distribute_ a big index across machines.\n# 2. Having more *replicas* enhances the _search_ performance and improves the\n#    cluster _availability_.\n#\n# The \"number_of_shards\" is a one-time setting for an index.\n#\n# The \"number_of_replicas\" can be increased or decreased anytime,\n# by using the Index Update Settings API.\n#\n# Elasticsearch takes care about load balancing, relocating, gathering the\n# results from nodes, etc. Experiment with different settings to fine-tune\n# your setup.\n\n# Use the Index Status API (<http://localhost:9200/A/_status>) to inspect\n# the index status.\n\n\n#################################### Paths ####################################\n\n# Path to directory containing configuration (this file and logging.yml):\n#\n#path.conf: /path/to/conf\n\n# Path to directory where to store index data allocated for this node.\n#\n#path.data: /path/to/data\n#\n# Can optionally include more than one location, causing data to be striped across\n# the locations (a la RAID 0) on a file level, favouring locations with most free\n# space on creation. For example:\n#\n#path.data: /path/to/data1,/path/to/data2\n\n# Path to temporary files:\n#\n#path.work: /path/to/work\n\n# Path to log files:\n#\n#path.logs: /path/to/logs\n\n# Path to where plugins are installed:\n#\n#path.plugins: /path/to/plugins\n\n\n#################################### Plugin ###################################\n\n# If a plugin listed here is not installed for current node, the node will not start.\n#\n#plugin.mandatory: mapper-attachments,lang-groovy\n\n\n################################### Memory ####################################\n\n# Elasticsearch performs poorly when JVM starts swapping: you should ensure that\n# it _never_ swaps.\n#\n# Set this property to true to lock the memory:\n#\n#bootstrap.mlockall: true\n\n# Make sure that the ES_MIN_MEM and ES_MAX_MEM environment variables are set\n# to the same value, and that the machine has enough memory to allocate\n# for Elasticsearch, leaving enough memory for the operating system itself.\n#\n# You should also make sure that the Elasticsearch process is allowed to lock\n# the memory, eg. by using `ulimit -l unlimited`.\n\n\n############################## Network And HTTP ###############################\n\n# Elasticsearch, by default, binds itself to the 0.0.0.0 address, and listens\n# on port [9200-9300] for HTTP traffic and on port [9300-9400] for node-to-node\n# communication. (the range means that if the port is busy, it will automatically\n# try the next port).\n\n# Set the bind address specifically (IPv4 or IPv6):\n#\n#network.bind_host: 192.168.0.1\n\n# Set the address other nodes will use to communicate with this node. If not\n# set, it is automatically derived. It must point to an actual IP address.\n#\n#network.publish_host: 192.168.0.1\n\n# Set both 'bind_host' and 'publish_host':\n#\n#network.host: 192.168.0.1\n\n# Set a custom port for the node to node communication (9300 by default):\n#\n#transport.tcp.port: 9300\n\n# Enable compression for all communication between nodes (disabled by default):\n#\n#transport.tcp.compress: true\n\n# Set a custom port to listen for HTTP traffic:\n#\n#http.port: 9200\n\n# Set a custom allowed content length:\n#\n#http.max_content_length: 100mb\n\n# Disable HTTP completely:\n#\n#http.enabled: false\n\n\n################################### Gateway ###################################\n\n# The gateway allows for persisting the cluster state between full cluster\n# restarts. Every change to the state (such as adding an index) will be stored\n# in the gateway, and when the cluster starts up for the first time,\n# it will read its state from the gateway.\n\n# There are several types of gateway implementations. For more information, see\n# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/modules-gateway.html>.\n\n# The default gateway type is the \"local\" gateway (recommended):\n#\n#gateway.type: local\n\n# Settings below control how and when to start the initial recovery process on\n# a full cluster restart (to reuse as much local data as possible when using shared\n# gateway).\n\n# Allow recovery process after N nodes in a cluster are up:\n#\n#gateway.recover_after_nodes: 1\n\n# Set the timeout to initiate the recovery process, once the N nodes\n# from previous setting are up (accepts time value):\n#\n#gateway.recover_after_time: 5m\n\n# Set how many nodes are expected in this cluster. Once these N nodes\n# are up (and recover_after_nodes is met), begin recovery process immediately\n# (without waiting for recover_after_time to expire):\n#\n#gateway.expected_nodes: 2\n\n\n############################# Recovery Throttling #############################\n\n# These settings allow to control the process of shards allocation between\n# nodes during initial recovery, replica allocation, rebalancing,\n# or when adding and removing nodes.\n\n# Set the number of concurrent recoveries happening on a node:\n#\n# 1. During the initial recovery\n#\n#cluster.routing.allocation.node_initial_primaries_recoveries: 4\n#\n# 2. During adding/removing nodes, rebalancing, etc\n#\n#cluster.routing.allocation.node_concurrent_recoveries: 2\n\n# Set to throttle throughput when recovering (eg. 100mb, by default 20mb):\n#\n#indices.recovery.max_bytes_per_sec: 20mb\n\n# Set to limit the number of open concurrent streams when\n# recovering a shard from a peer:\n#\n#indices.recovery.concurrent_streams: 5\n\n\n################################## Discovery ##################################\n\n# Discovery infrastructure ensures nodes can be found within a cluster\n# and master node is elected. Multicast discovery is the default.\n\n# Set to ensure a node sees N other master eligible nodes to be considered\n# operational within the cluster. Its recommended to set it to a higher value\n# than 1 when running more than 2 nodes in the cluster.\n#\n#discovery.zen.minimum_master_nodes: 1\n\n# Set the time to wait for ping responses from other nodes when discovering.\n# Set this option to a higher value on a slow or congested network\n# to minimize discovery failures:\n#\n#discovery.zen.ping.timeout: 3s\n\n# For more information, see\n# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/modules-discovery-zen.html>\n\n# Unicast discovery allows to explicitly control which nodes will be used\n# to discover the cluster. It can be used when multicast is not present,\n# or to restrict the cluster communication-wise.\n#\n# 1. Disable multicast discovery (enabled by default):\n#\ndiscovery.zen.ping.multicast.enabled: false\n#\n# 2. Configure an initial list of master nodes in the cluster\n#    to perform discovery when new nodes (master or data) are started:\n#\ndiscovery.zen.ping.unicast.hosts: [\"127.0.0.1\"]\n\n# EC2 discovery allows to use AWS EC2 API in order to perform discovery.\n#\n# You have to install the cloud-aws plugin for enabling the EC2 discovery.\n#\n# For more information, see\n# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/modules-discovery-ec2.html>\n#\n# See <http://elasticsearch.org/tutorials/elasticsearch-on-ec2/>\n# for a step-by-step tutorial.\n\n# GCE discovery allows to use Google Compute Engine API in order to perform discovery.\n#\n# You have to install the cloud-gce plugin for enabling the GCE discovery.\n#\n# For more information, see <https://github.com/elasticsearch/elasticsearch-cloud-gce>.\n\n# Azure discovery allows to use Azure API in order to perform discovery.\n#\n# You have to install the cloud-azure plugin for enabling the Azure discovery.\n#\n# For more information, see <https://github.com/elasticsearch/elasticsearch-cloud-azure>.\n\n################################## Slow Log ##################################\n\n# Shard level query and fetch threshold logging.\n\n#index.search.slowlog.threshold.query.warn: 10s\n#index.search.slowlog.threshold.query.info: 5s\n#index.search.slowlog.threshold.query.debug: 2s\n#index.search.slowlog.threshold.query.trace: 500ms\n\n#index.search.slowlog.threshold.fetch.warn: 1s\n#index.search.slowlog.threshold.fetch.info: 800ms\n#index.search.slowlog.threshold.fetch.debug: 500ms\n#index.search.slowlog.threshold.fetch.trace: 200ms\n\n#index.indexing.slowlog.threshold.index.warn: 10s\n#index.indexing.slowlog.threshold.index.info: 5s\n#index.indexing.slowlog.threshold.index.debug: 2s\n#index.indexing.slowlog.threshold.index.trace: 500ms\n\n################################## GC Logging ################################\n\n#monitor.jvm.gc.young.warn: 1000ms\n#monitor.jvm.gc.young.info: 700ms\n#monitor.jvm.gc.young.debug: 400ms\n\n#monitor.jvm.gc.old.warn: 10s\n#monitor.jvm.gc.old.info: 5s\n#monitor.jvm.gc.old.debug: 2s\n\n################################## Security ################################\n\n# Uncomment if you want to enable JSONP as a valid return transport on the\n# http server. With this enabled, it may pose a security risk, so disabling\n# it unless you need it is recommended (it is disabled by default).\n#\n#http.jsonp.enable: true\n","markers":{"markers":{"1":{"id":1,"range":[[325,45],[325,45]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":17,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[31,1],[31,1]]},"newParams":{"reversed":true,"range":[[31,0],[31,1]]},"deserializer":"MarkerPatch"},{"oldRange":[[31,0],[31,1]],"newRange":[[31,0],[31,0]],"oldText":"#","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[31,14],[31,27]]},"newParams":{"tailed":false,"range":[[31,14],[31,14]]},"deserializer":"MarkerPatch"},{"oldRange":[[31,14],[31,27]],"newRange":[[31,14],[31,15]],"oldText":"elasticsearch","newText":"w","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"range":[[31,14],[31,14]]},"newParams":{"range":[[31,15],[31,15]]},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[31,15],[31,15]],"newRange":[[31,15],[31,16]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[31,16],[31,16]],"newRange":[[31,16],[31,17]],"oldText":"","newText":"r","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[31,17],[31,17]],"newRange":[[31,17],[31,18]],"oldText":"","newText":"k","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[31,18],[31,18]],"newRange":[[31,18],[31,19]],"oldText":"","newText":"s","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[31,19],[31,19]],"newRange":[[31,19],[31,20]],"oldText":"","newText":"h","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[31,20],[31,20]],"newRange":[[31,20],[31,21]],"oldText":"","newText":"o","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[31,21],[31,21]],"newRange":[[31,21],[31,22]],"oldText":"","newText":"p","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[320,1],[320,1]]},"newParams":{"range":[[320,0],[320,1]]},"deserializer":"MarkerPatch"},{"oldRange":[[320,0],[320,1]],"newRange":[[320,0],[320,0]],"oldText":"#","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[325,1],[325,1]]},"newParams":{"range":[[325,0],[325,1]]},"deserializer":"MarkerPatch"},{"oldRange":[[325,0],[325,1]],"newRange":[[325,0],[325,0]],"oldText":"#","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[325,36],[325,55]]},"newParams":{"tailed":false,"range":[[325,36],[325,36]]},"deserializer":"MarkerPatch"},{"oldRange":[[325,36],[325,55]],"newRange":[[325,36],[325,37]],"oldText":"host1\", \"host2:port","newText":"1","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"range":[[325,36],[325,36]]},"newParams":{"range":[[325,37],[325,37]]},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[325,37],[325,37]],"newRange":[[325,37],[325,38]],"oldText":"","newText":"2","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[325,38],[325,38]],"newRange":[[325,38],[325,39]],"oldText":"","newText":"7","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[325,39],[325,39]],"newRange":[[325,39],[325,40]],"oldText":"","newText":".","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[325,40],[325,40]],"newRange":[[325,40],[325,41]],"oldText":"","newText":"0","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[325,41],[325,41]],"newRange":[[325,41],[325,42]],"oldText":"","newText":".","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[325,42],[325,42]],"newRange":[[325,42],[325,43]],"oldText":"","newText":"0","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[325,43],[325,43]],"newRange":[[325,43],[325,44]],"oldText":"","newText":".","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[325,44],[325,44]],"newRange":[[325,44],[325,45]],"oldText":"","newText":"1","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/thilko/Documents/projects/elasticsearch_ws/work/elasticsearch-1.3.2/config/elasticsearch.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"fc728770a71e67e651e77c2af998bd450a2292bc","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":17,"softTabs":true,"displayBuffer":{"id":18,"softWrap":false,"editorWidthInChars":null,"scrollTop":6133,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/thilko/Documents/projects/elasticsearch_ws/work/elasticsearch-1.3.2/config/elasticsearch.yml","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/thilko/Documents/projects/elasticsearch_ws/work/elasticsearch-1.3.2/config/elasticsearch.yml","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-yaml","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/thilko/Documents/projects/elasticsearch_ws/work/elasticsearch-1.3.2/config/elasticsearch.yml":1410273091425},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":14743550},"tree-view":{"directoryExpansionStates":{"config":{}},"selectedPath":"/Users/thilko/Documents/projects/elasticsearch_ws/work/elasticsearch-1.3.2/config/elasticsearch.yml","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}